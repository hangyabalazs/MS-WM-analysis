function Behaviour_panel(xlsdir, resdir)
%BEHAVIOUR_PANEL   Creates the main behavioral data panel for Exp animals (Fig1).
%   BEHAVIOUR_PANEL(XLSDIR, RESDIR) generates a multi-panel figure (Fig1) showing 
%   behavioral data from experimental animals across different training phases.
%
%   Inputs:
%       xlsdir - Full path to the directory containing the Excel file with 
%                behavioral data.
%       resdir - Full path to the directory where output figures should be saved.
%
%   Notes:
%       - Fig1-A is not generated in MATLAB (e.g., created in Illustrator).
%       - The supplementary behavioral panels (S1-S4) are generated by calling
%         BEHAVIOUR_PANEL_SUPP which include behavioral data for control
%         animals.
%
%   Example:
%       Behaviour_panel('C:\Data\Behavior', 'C:\Results\Figures')
%
%   See also BEHAVIOUR_PANEL_SUPP
% 
%  Malek Aouadi, Laboratory of Systems Neuroscience
%  Institute of Experimental Medicine, Budapest, Hungary
%  2025

% Close any open figures to avoid confusion
close all 

% Constants for layout
vertical_gap = 0.035; % Vertical space between subplots
legend_width = 0.1; % Space reserved for legends outside subplots
margin_top = 0.05;    % Top margin
margin_bottom = 0.06; % Bottom margin (space for Illustrator edits)
margin_left = 0.04;   % Left margin
margin_right = 0.07;  % Right margin
col3_width = 0.15;    % Width of third column (for legends)
col1_width = 0.3;     % Width of first column
col2_width = col1_width; % Width of second column
legend_height = 0.1;
annotation_height = 0.03; % Height for annotation above subplot 4

% Calculate positions for subplots
num_rows = 3;  % Number of subplot rows
figure_height = 1 - margin_top - margin_bottom - annotation_height - (num_rows - 1) * vertical_gap; % Subtract annotation height
row_height = (figure_height - (num_rows - 1) * vertical_gap) / num_rows;
row1_y = 1 - margin_top - row_height;
row2_y = row1_y - row_height - vertical_gap;
row3_y = margin_bottom;

% Column X positions
col1_x = margin_right; % First column start
col2_x = col1_x + col1_width + margin_right + margin_left; % Second column start
col3_x = col2_x + col2_width + margin_right;

% Create figure with fixed size in centimeters
figure('Units', 'centimeters', 'Position', [2.09020833333333,6.40291666666667,17,20]);

% Fig1.A - Schematic of Experimental setup
% This subplot is left empty for Illustrator editing
subplot('Position', [col1_x, row1_y, col1_width, row_height]); % Empty subplot 
axis off;

% Fig1.B - Task Timeline Diagram
timeline_position = [col2_x - 0.04, row1_y, col2_width + col3_width + margin_right, row_height];
subplot('Position', timeline_position);
hold on;

% Plot behavioral events
plot([1 2 2 5 5 10], [4 4 5 5 4 4], 'k', 'LineWidth', 2); % Central port poking
plot([1 2 2 3 3 10], [2 2 3 3 2 2], 'k', 'LineWidth', 2); % Tone
plot([1 8 8 9 9 10], [0 0 1 1 0 0], 'k', 'LineWidth', 2); % Reward/Punishment

% Dashed vertical lines marking events
line([2 2], [-2 6], 'Color', 'k', 'LineStyle', '--', 'LineWidth', 2); % Fixation start
line([5 5], [-2 6], 'Color', 'k', 'LineStyle', '--', 'LineWidth', 2); % Fixation end
line([8 8], [-2 6], 'Color', 'k', 'LineStyle', '--', 'LineWidth', 2); % Feedback delivery

% Add text labels for key events
text_pos=[2 5 8];
text(text_pos(1), 7.2, {'Fixation'; 'start'}, 'HorizontalAlignment', 'center', 'FontSize', 10);
text(text_pos(2), 7.2, {'Fixation'; 'end'}, 'HorizontalAlignment', 'center', 'FontSize', 10);
text(text_pos(3), 7.2, {'Feedback'; 'delivery'}, 'HorizontalAlignment', 'center', 'FontSize', 10);
text(3.5, -1.4, '0.9 - 1.5 s', 'HorizontalAlignment', 'center', 'FontSize', 10);
text(6.5, -1.4, '0.4 - 1.9 s', 'HorizontalAlignment', 'center', 'FontSize', 10);

% Add labels for the rows
text(1, 4.2, {'Central port'; 'poking'}, 'FontSize', 10, 'HorizontalAlignment', 'right');
text(1, 2.2, 'Tone', 'FontSize', 10, 'HorizontalAlignment', 'right');
text(1, 0, {'Reward/';'Punishment'}, 'FontSize', 10, 'HorizontalAlignment', 'right');

% Finalize timeline subplot
ylim([-8 6]);
xlim([-2 10]);
set(gca, 'TickDir', 'out', 'TickLength', [0.01, 0.01]);
axis off;

% Fig1.C - Delta between fixation end and tone offset (pre-surgery)
% Load data from Excel file
NWM5 = xlsread([xlsdir '\MiceTime.xlsx'],1,'B4:Y4');
NWM7 = xlsread([xlsdir '\MiceTime.xlsx'],1,'B5:AC5');
NWM9 = xlsread([xlsdir '\MiceTime.xlsx'],1,'B6:BT6');
NWM15 = xlsread([xlsdir '\MiceTime.xlsx'],1,'B7:AK7');

% Define mouse-specific colors
color5 = [1, 0.2, 1];
color7 = [1, 0.5, 1];
color9 = [0.8, 0.5, 0.8];
color15 = [0.8, 0.2, 0.8];

% Plot delta data
subplot('Position', [col1_x, row2_y, col1_width, row_height]);
hold on
plot(NWM5,'color',color5,'LineWidth',2);
plot(NWM7,'color',color7,'LineWidth',2);
plot(NWM9,'color',color9,'LineWidth',2);
plot(NWM15,'color',color15,'LineWidth',2);
plot([0,length(NWM9)], [0,0],'k');
xlim([0,length(NWM9)]);
ylim([-2,2]);
yticks([-2,0,2]);
ylabel('Fixation end - tone offset (s)','FontSize',9);
xlabel('Training Session');
set(gca,'TickDir','out','TitleHorizontalAlignment','left','TickLength',[0.02,0.02]);
hold off

% Fig1.D - Fixation end - tone offset (first vs last day)
% Bar and line plot showing mean values
subplot('Position', [col2_x, row2_y, col2_width, row_height]);
hold on
barmeans = [mean([NWM5(1) NWM7(1) NWM9(1) NWM15(1)]) , mean([NWM5(end) NWM7(end) NWM9(end) NWM15(end)])];
bar([0,3],barmeans, 0.6, 'FaceColor','none','EdgeColor',[0 0 0.2],'LineWidth',2)
plot([0,3],[NWM5(1) NWM5(end)],'color',color5,'LineWidth',2)
plot([0,3],[NWM7(1) NWM7(end)],'color',color7,'LineWidth',2)
plot([0,3],[NWM9(1) NWM9(end)],'color',color9,'LineWidth',2)
plot([0,3],[NWM15(1) NWM15(end)],'color',color15,'LineWidth',2)
plot([0,3], [0,0],'k')
ylabel('Fixation end - tone offset (s)','FontSize',9);
xticks([0,3]);
xticklabels({''});
xlim([-1.2,4.2]);
ylim([-2,2]);
yticks([-2,-1,0,1,2]);
text(0,-2.6,{'First'; 'training session'},'HorizontalAlignment','center','FontSize',9);
text(3,-2.6,{'Last'; 'training session'},'HorizontalAlignment','center','FontSize',9);
ax=gca;
ax.TickDir='out';
legend_position_4 = [col3_x, row2_y + legend_height + 0.05, legend_width, legend_height];
legend({'','NWM5','NWM7','NWM9','NWM15'},'Box','off','NumColumns',1,'Position',legend_position_4);
set(gca,'TickDir','out','TickLength',[0.02,0.02]);
hold off

% Fig1.E - Session performance of NWM5 pre and post surgery
mouse_data = xlsread([xlsdir '\MiceTime.xlsx'],1,'B85:AE92');
correct_trials = sum(mouse_data(1:2, :), 1);
incorrect_trials = sum(mouse_data(3:4, :), 1);
aborted_trials = sum(mouse_data(5:6, :), 1);
missed_trials = sum(mouse_data(7:8, :), 1);
post_sur = xlsread([xlsdir '\MiceTime.xlsx'],1,'CP19:EB22');

perf = [correct_trials post_sur(1,:);  incorrect_trials post_sur(2,:);  aborted_trials post_sur(3,:);  missed_trials post_sur(4,:)];
perf = vertcat( perf(1,:), perf(2,:), perf(3,:), perf(4,:));

% Combined subplot for stacked bar chart
subplot5_position = [col1_x, row3_y, col1_width + col2_width + margin_right + margin_left, row_height];
subplot('Position', subplot5_position);

ba1 = bar(perf',0.6,'stacked');
ylim([0 1])
ba1(1).FaceColor = [0 0.8 0]; % Correct
ba1(2).FaceColor = [0.8 0 0]; % Incorrect
ba1(3).FaceColor = [0.6 0.6 0.6]; % Abort
ba1(4).FaceColor = [0.9 0.9 0]; % Timed Out

hold on;
ax=gca;

% Normalize surgery marker position
surgery_time = size(correct_trials,2) + 0.5;
x_limits = xlim;
surgery_norm_x = (surgery_time - x_limits(1)) / (x_limits(2) - x_limits(1)); % Normalized X position
subplot_top = subplot5_position(2) + subplot5_position(4); % Bottom Y + height = top edge

% Add annotation arrow for surgery
annotation('textarrow', [subplot5_position(1) + surgery_norm_x * subplot5_position(3), ...
                          subplot5_position(1) + surgery_norm_x * subplot5_position(3)], ...
                         [subplot_top + 0.02, subplot_top], ...
    'HeadStyle', 'vback1', 'LineWidth', 2, 'Color', 'red', 'String', 'Surgery', 'FontSize', 9);

xlabel('Session');
ylabel('Session performance (%)');
ylim([0 1])
yticks([0,1]);
xticks([0,10,20,30,40,50,60,70]);
legend_position_5 = [col3_x, row3_y  + legend_height + 0.04, legend_width, legend_height];
legend('Correct trials','Error trials','Aborted trials','Missed trials','Box','off','FontSize',9,'Position',legend_position_5);
box off;
set(gca,'TickDir','out','TickLength',[0.01,0.01]);
hold off;

% Set global font size
set(findall(gcf, '-property', 'fontsize'), 'fontsize', 10,'LineWidth', 1);

% Saving 
if ~isempty(resdir)
    saveas(gcf,fullfile(resdir, 'Fig1_Behaviour_panel_Exp.jpg'));
    saveas(gcf,fullfile(resdir, 'Fig1_Behaviour_panel_Exp.svg'));
end

% Generate supplementary panels
Behaviour_panel_supp(xlsdir, resdir);

close all
end